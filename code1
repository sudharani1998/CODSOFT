from typing import List
from fastapi import FastAPI, HTTPException
from pydantic import BaseModel

app = FastAPI()

class MatrixInput(BaseModel):
    matrix: List[List[int]]

def largest_rectangle(matrix: List[List[int]]) -> dict:
    def maximal_rectangle(matrix):
        if not matrix:
            return 0
        n = len(matrix[0])
        heights = [0] * (n + 1)
        max_area = 0
        for row in matrix:
            for i in range(n):
                heights[i] = heights[i] + 1 if row[i] == 1 else 0
            stack = [-1]
            for i in range(n + 1):
                while heights[i] < heights[stack[-1]]:
                    h = heights[stack.pop()]
                    w = i - stack[-1] - 1
                    max_area = max(max_area, h * w)
                stack.append(i)
        return max_area

    max_area = 0
    number = None
    for row in matrix:
        area = maximal_rectangle([[1 if cell == number else 0 for cell in row] for row in matrix])
        if area > max_area:
            max_area = area
            number = row[0]
    return {"largest_rectangle_area": max_area, "number": number}

@app.post("/largest_rectangle")
async def get_largest_rectangle(matrix_input: MatrixInput):
    result = largest_rectangle(matrix_input.matrix)
    return result
